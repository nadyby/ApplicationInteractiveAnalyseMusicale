import seaborn as sns
import matplotlib.pyplot as plt
import streamlit as st
import pandas as pd
import numpy as np

def plot_music_visualizations(df):
    """
    Cr√©e des visualisations diff√©rentes pour analyser les donn√©es musicales Spotify.
    """

    # 1. Top 10 des Morceaux par Score de Popularit√©
    st.subheader("1. Top 10 des Morceaux par Score de Popularit√©")
    top_10_tracks = df[['track_name', 'popularity', 'album_name', 'artists', 'duration_ms', 'track_genre']] \
        .drop_duplicates(subset=['track_name']) \
        .sort_values(by='popularity', ascending=False).head(10)
    st.write(top_10_tracks)
    
    st.markdown("""
        Cette visualisation montre les 10 morceaux les plus populaires, 
        avec leurs d√©tails comme le nom de l'album et de l'artiste, le genre et la dur√©e.
    """)

    # 2. Top 10 des Artistes avec les Morceaux les Plus Populaires
    st.subheader("2. Top 10 des Artistes avec les Morceaux les Plus Populaires")
    top_10_artists = df.groupby('artists').agg({'popularity': 'mean'}).sort_values(by='popularity', ascending=False).head(10)
    
    fig2, ax2 = plt.subplots(figsize=(10, 6))
    sns.barplot(data=top_10_artists, x='popularity', y=top_10_artists.index, palette='viridis', dodge=False)
    plt.title('Top 10 des Artistes avec les Morceaux les Plus Populaires')
    plt.xlabel('Popularit√© Moyenne des Morceaux')
    plt.ylabel('Nom de l\'Artiste')
    st.pyplot(fig2)

    # 3. Top 20 des Genres les Plus Populaires
    st.subheader("3. Top 20 des Genres les Plus Populaires")
    top_20_genres = df.groupby('track_genre').agg({'popularity': 'mean'}).sort_values(by='popularity', ascending=False).head(20)
    
    fig3, ax3 = plt.subplots(figsize=(10, 6))
    sns.barplot(data=top_20_genres, x='popularity', y=top_20_genres.index, palette='viridis', dodge=False)
    plt.title('Top 20 des Genres les Plus Populaires')
    plt.xlabel('Popularit√© Moyenne des Morceaux')
    plt.ylabel('Genre Musical')
    st.pyplot(fig3)

    # 4. Distribution de la Popularit√© en Fonction de la Dur√©e des Morceaux (Am√©lior√©)
    st.subheader("4. Distribution de la Popularit√© en Fonction de la Dur√©e des Morceaux")
    fig4, ax4 = plt.subplots(figsize=(12, 6))
    sns.scatterplot(
    data=df, 
    x='duration_ms', 
    y='popularity', 
    hue='popularity', 
    size='popularity',
    sizes=(20, 200), 
    palette='coolwarm', 
    alpha=0.7, 
    ax=ax4 )
    best_durations = df.groupby('duration_ms')['popularity'].mean().sort_values(ascending=False).head(3).index

    ax4.set_title("Relation entre Dur√©e des Morceaux et Popularit√©")
    ax4.set_xlabel("Dur√©e (ms)")
    ax4.set_ylabel("Popularit√©")
    ax4.legend(title="Popularit√©", loc='upper left', bbox_to_anchor=(1, 1))
    st.pyplot(fig4)
    st.markdown("""Cette image est un graphique de dispersion montrant la relation entre la dur√©e des morceaux (en millisecondes) et leur popularit√©. Chaque point repr√©sente un morceau, avec sa position sur l\'axe horizontal indiquant sa dur√©e et sur l\'axe vertical sa popularit√©. 
                La couleur des points varie selon un gradient, 
                du bleu (faible popularit√©) au rouge (forte popularit√©).
                Le graphique indique que les morceaux de dur√©e courte ont tendance √† √™tre populaires.
                D‚Äôapr√®s ce graphique, on peut dire que les morceaux courts sont plus souvent populaires, mais il serait prudent d‚Äôanalyser d'autres facteurs pour mieux comprendre les raisons derri√®re cette tendance.
                """)

    # 5. Heatmap des Corr√©lations entre les Caract√©ristiques
    st.subheader("5. Corr√©lations entre les Caract√©ristiques")
    numeric_columns = ['popularity', 'danceability', 'energy', 'loudness', 
                       'acousticness', 'instrumentalness', 'valence', 'tempo']
    correlation_matrix = df[numeric_columns].corr()
    fig5, ax5 = plt.subplots(figsize=(10, 8))
    sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', center=0, fmt='.2f', ax=ax5)
    plt.title('Corr√©lations entre les Caract√©ristiques')
    st.pyplot(fig5)
    st.markdown("""Popularit√© ind√©pendante des caract√©ristiques audio : La popularit√© pourrait √™tre davantage influenc√©e par des √©l√©ments externes 
                que par les attributs mesur√©s ici.
                Il est possible que des combinaisons complexes (comme "danceability" + "valence") influencent la popularit√©.
                """)

    st.markdown("""
        ### üìä Insights Cl√©s
- Une liste du Top 10 des Artistes et Chansons les Plus Populaires
- üî• Les morceaux courts ont tendance √† √™tre plus populaires, bien que la dur√©e ne soit pas le seul facteur influen√ßant leur succ√®s.
- üéµ Les caract√©ristiques "energy" et "loudness" sont fortement corr√©l√©es (**0.76**), indiquant que les morceaux plus bruyants sont souvent plus √©nergiques.
- üìâ La popularit√© montre des corr√©lations tr√®s faibles avec les caract√©ristiques audio, sugg√©rant que des facteurs externes (comme le genre, la promotion ou l'artiste) jouent un r√¥le plus important.
""")

def update_main_for_viz():
    """
    La fonction √† appeler dans main.py pour afficher toutes les visualisations
    """
    try:
        df = pd.read_csv('data/spotify_tracks_cleaned.csv')
        plot_music_visualizations(df)
    except Exception as e:
        st.error(f"Erreur lors du chargement ou de la visualisation des donn√©es : {str(e)}")
